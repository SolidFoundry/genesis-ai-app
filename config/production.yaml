# Genesis AI 应用生产环境配置
# 用于生产环境，注重性能、安全和稳定性

# 继承默认配置并覆盖生产环境特定设置

# 应用生产环境配置
app:
  debug: false
  log_level: "WARNING"
  tenant_mode: "multi"  # 生产环境使用多租户模式

# 服务器生产环境配置
server:
  rest_api:
    host: "0.0.0.0"
    port: 8000
    workers: 4  # 生产环境使用多进程
    reload: false
    access_log: true
    proxy_headers: true
  mcp_server:
    host: "0.0.0.0"
    port: 8001
    workers: 2

# 数据库生产环境配置
database:
  user: "${DB_USER}"
  password: "${DB_PASSWORD}"
  host: "${DB_HOST}"
  port: "${DB_PORT}"
  name: "${DB_NAME}"
  pool_size: 50
  max_overflow: 100
  pool_timeout: 30
  pool_recycle: 1800
  echo: false  # 生产环境关闭SQL日志

# 缓存生产环境配置
cache:
  redis:
    host: "${REDIS_HOST}"
    port: "${REDIS_PORT}"
    password: "${REDIS_PASSWORD}"
    db: 0
    decode_responses: true
    ssl: true
  ttl: 7200  # 生产环境缓存时间较长

# 消息队列生产环境配置
messaging:
  rabbitmq:
    host: "${RABBITMQ_HOST}"
    port: "${RABBITMQ_PORT}"
    username: "${RABBITMQ_USER}"
    password: "${RABBITMQ_PASSWORD}"
    virtual_host: "${RABBITMQ_VHOST}"
    ssl: true

# LLM 生产环境配置
llm:
  default_provider: "openai"  # 生产环境默认使用openai
  providers:
    openai:
      base_url: "${OPENAI_BASE_URL}"
      model: "gpt-4"
      max_tokens: 4096
      temperature: 0.3  # 生产环境使用较低温度确保一致性
    qwen:
      base_url: "${QWEN_BASE_URL}"
      model: "qwen-max"
      max_tokens: 4096
      temperature: 0.3

# 可观测性生产环境配置
observability:
  tracing:
    enabled: true
    service_name: "genesis-ai-app"
    sampler_rate: 0.1  # 生产环境采样率降低以减少开销
    exporter:
      endpoint: "${OTEL_EXPORTER_OTLP_ENDPOINT}"
      headers: "${OTEL_EXPORTER_OTLP_HEADERS}"
  metrics:
    enabled: true
    prometheus_endpoint: "/metrics"
    exporter:
      endpoint: "${OTEL_EXPORTER_OTLP_ENDPOINT}"

# 日志生产环境配置
logging:
  formatters:
    json:
      format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s", "trace_id": "%(trace_id)s", "span_id": "%(span_id)s", "extra": %(extra)s}'
  handlers:
    console:
      class: logging.StreamHandler
      level: WARNING
      formatter: json
      stream: ext://sys.stdout
    file:
      class: logging.handlers.RotatingFileHandler
      level: INFO
      formatter: json
      filename: "/var/log/genesis/app.log"
      maxBytes: 10485760  # 10MB
      backupCount: 5
  loggers:
    genesis:
      level: INFO
      propagate: false
      handlers: [console, file]
    sqlalchemy:
      level: WARNING
    httpx:
      level: WARNING
    root:
      level: WARNING
      handlers: [console]

# 生产环境安全配置
security:
  cors:
    enabled: true
    allow_origins: ["${ALLOWED_ORIGINS}"]  # 从环境变量读取
    allow_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allow_headers: ["${ALLOWED_HEADERS}"]
    allow_credentials: true
  
  rate_limit:
    enabled: true
    requests_per_minute: 60
    burst: 10
  
  api_key:
    required: true
    header_name: "X-API-Key"

# 生产环境性能配置
performance:
  cache_all: true
  compression: true
  gzip_min_size: 1024
  
# 健康检查配置
health:
  enabled: true
  endpoint: "/health"
  detailed: false
  
# 监控配置
monitoring:
  enabled: true
  metrics_endpoint: "/metrics"
  health_endpoint: "/health"